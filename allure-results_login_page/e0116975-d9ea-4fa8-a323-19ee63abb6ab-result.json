{"name": "test_Registration_and_login_page", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Page.wait_for_timeout: Target page, context or browser has been closed", "trace": "@pytest.mark.asyncio\n    async def test_Registration_and_login_page():\n        async with async_playwright() as playwright:\n            browser = await playwright.chromium.launch(headless=False)\n            context = await browser.new_context()\n    \n            # Registration Page\n            page = await context.new_page()\n            await page.goto(\"https://rahulshettyacademy.com/client/\")\n            await page.wait_for_selector(\"//p[@class='login-wrapper-footer-text']\")\n            await page.click(\"//p[@class='login-wrapper-footer-text']\")\n    \n            # Wait for the input fields to be visible before filling them\n            await page.wait_for_selector(\"//input[@id='firstName']\")\n            await page.fill(\"//input[@id='firstName']\", \"Narasimhulu\")\n            await page.fill(\"//input[@id='lastName']\", \"Buduru\")\n            await page.fill(\"//input[@id='userEmail']\", \"narasimhulubuduru4822@gmail.com\")\n            await page.fill(\"//input[@id='userMobile']\", \"6303759197\")\n            await page.select_option(\"//select[@class='custom-select ng-untouched ng-pristine ng-valid']\", \"Engineer\")\n            await page.check(\"input[value='Male']\")\n            await page.fill(\"//input[@id='userPassword']\", \"Narasimhulu@12\")\n            await page.fill(\"//input[@id='confirmPassword']\", \"Narasimhulu@12\")\n            await page.click(\"//input[@type='checkbox']\")\n            await page.wait_for_selector(\"//input[@id='login']\")\n            await page.click(\"//input[@id='login']\")\n>           await page.wait_for_timeout(3000)\n\ntests\\Assignment_RS.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\playwright\\async_api\\_generated.py:11153: in wait_for_timeout\n    await self._impl_obj.wait_for_timeout(timeout=timeout)\n.venv\\Lib\\site-packages\\playwright\\_impl\\_page.py:1023: in wait_for_timeout\n    await self._main_frame.wait_for_timeout(timeout)\n.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:756: in wait_for_timeout\n    await self._channel.send(\"waitForTimeout\", locals_to_params(locals()))\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x00000269188ED760>\ncb = <function Channel.send.<locals>.<lambda> at 0x0000026918C6A840>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TargetClosedError: Page.wait_for_timeout: Target page, context or browser has been closed\n\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:514: TargetClosedError"}, "start": 1728558075130, "stop": 1728558085375, "uuid": "2c98b61c-154d-4e34-bd03-0f61962c43ef", "historyId": "d5c2743ebb878d32a7f6e6d34e5ebbc5", "testCaseId": "d5c2743ebb878d32a7f6e6d34e5ebbc5", "fullName": "tests.Assignment_RS#test_Registration_and_login_page", "labels": [{"name": "tag", "value": "asyncio"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "Assignment_RS"}, {"name": "host", "value": "ALIPLR8365"}, {"name": "thread", "value": "7312-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Assignment_RS"}]}